// <auto-generated />
using System;
using EInstallment.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EInstallment.Api.Migrations
{
    [DbContext(typeof(EInstallmentContext))]
    [Migration("20231121142007_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EInstallment.Domain.CreditCards.CreditCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PaymentDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CreditCard", (string)null);
                });

            modelBuilder.Entity("EInstallment.Domain.Installments.Installment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AlreadyPayNumberOfInstallment")
                        .HasColumnType("int");

                    b.Property<decimal>("AmountOfEachInstallment")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreateOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreditCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotPayNumberOfInstallment")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(10, 1)
                        .HasColumnType("decimal(10,1)");

                    b.Property<int>("TotalNumberOfInstallment")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("CreditCardId");

                    b.ToTable("Installment", (string)null);
                });

            modelBuilder.Entity("EInstallment.Domain.Members.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Member", (string)null);
                });

            modelBuilder.Entity("EInstallment.Domain.Payments.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 1)
                        .HasColumnType("decimal(10,1)");

                    b.Property<DateTime>("CreateOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstallmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("InstallmentId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("EInstallment.Domain.Installments.Installment", b =>
                {
                    b.HasOne("EInstallment.Domain.Members.Member", "Creator")
                        .WithMany("Installments")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EInstallment.Domain.CreditCards.CreditCard", "CreditCard")
                        .WithMany("Installments")
                        .HasForeignKey("CreditCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("CreditCard");
                });

            modelBuilder.Entity("EInstallment.Domain.Payments.Payment", b =>
                {
                    b.HasOne("EInstallment.Domain.Members.Member", "Creator")
                        .WithMany("Payments")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EInstallment.Domain.Installments.Installment", "Installment")
                        .WithMany("Payments")
                        .HasForeignKey("InstallmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Installment");
                });

            modelBuilder.Entity("EInstallment.Domain.CreditCards.CreditCard", b =>
                {
                    b.Navigation("Installments");
                });

            modelBuilder.Entity("EInstallment.Domain.Installments.Installment", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("EInstallment.Domain.Members.Member", b =>
                {
                    b.Navigation("Installments");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
